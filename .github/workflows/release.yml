# I use this workflow to build and release a Docker image
name: Release Pipeline

# I run this only when I push a version tag like v1.0.0
on:
    push:
        tags:
            - "v*"

jobs:
    release:
        # I run this on the latest Ubuntu runner
        runs-on: ubuntu-latest

        steps:
            # I pull the repository code
            - name: Checkout repository
              uses: actions/checkout@v4

            # I set up Docker Buildx so I can build images properly
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            # I log in to GitHub Container Registry (GHCR)
            - name: Log in to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            # I build the Docker image and push it with the tag name
            - name: Build and Push Docker Image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: true
                  # The Docker repo name must be lowercase
                  tags: ghcr.io/shubham-k77/ci-cd-lsp:${{ github.ref_name }}

            # I scan the pushed image for security issues
            - name: Scan image for vulnerabilities
              uses: aquasecurity/trivy-action@master
              with:
                  image-ref: ghcr.io/shubham-k77/ci-cd-lsp:${{ github.ref_name }}
                  severity: CRITICAL,HIGH
                  exit-code: 1
                  ignore-unfixed: true

            # I create a GitHub Release with generated notes
            - name: Create GitHub Release
              uses: softprops/action-gh-release@v2
              with:
                  generate_release_notes: true
                  release_notes_file: RELEASE_NOTES.md
